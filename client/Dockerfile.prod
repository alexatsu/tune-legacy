FROM node:18-alpine

RUN apk add --no-cache openssl

ARG GOOGLE_ID
ARG GOOGLE_SECRET
ARG GH_ID
ARG GH_SECRET
ARG NEXTAUTH_URL
ARG NEXTAUTH_SECRET
ARG DATABASE_URL
ARG MUSIC_SERVICE_CONTAINER
ARG PARSER_SERVICE_CONTAINER
ARG CLIENT_URL

WORKDIR /app

COPY ./client/package.json ./
COPY ./client/pnpm-lock.yaml ./
COPY ./client ./

RUN npm install -g pnpm
RUN pnpm install 

COPY ./client/prisma ./prisma
RUN pnpx prisma generate


# general env for next.js
RUN touch .env.local
RUN echo "GOOGLE_ID=$GOOGLE_ID" >> .env.local
RUN echo "GOOGLE_SECRET=$GOOGLE_SECRET" >> .env.local
RUN echo "GH_ID=$GH_ID" >> .env.local
RUN echo "GH_SECRET=$GH_SECRET" >> .env.local
RUN echo "NEXTAUTH_URL=$NEXTAUTH_URL" >> .env.local
RUN echo "NEXTAUTH_SECRET=$NEXTAUTH_SECRET" >> .env.local
RUN echo "DATABASE_URL=$DATABASE_URL" >> .env.local
RUN echo "MUSIC_SERVICE_CONTAINER=$MUSIC_SERVICE_CONTAINER" >> .env.local
RUN echo "PARSER_SERVICE_CONTAINER=$PARSER_SERVICE_CONTAINER" >> .env.local
RUN echo "CLIENT_URL=$CLIENT_URL" >> .env.local

# env for prisma migrations
RUN touch .env 
RUN echo "DATABASE_URL=$DATABASE_URL" >> .env

RUN pnpm run build;

WORKDIR /app

ENV HOSTNAME "0.0.0.0"
CMD ["pnpm","run", "start"] 